name: ispw-sync-local, generate and deploy


on: [push]

jobs:
  generate:
    name: sync, build & deploy
    runs-on: [self-hosted, ISPW]
    env:
      Win_Topaz_Location: 'C:\Topaz\Workbench CLI'
    
    steps:
      - name: checkout step
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: sync step
        uses: bmc-compuware/ispw-sync-local@main
        id: sync
        with:
          host: 'ispw-host.com'
          port: 12345
          uid: ${{ secrets.TSOUSER }}
          pass: ${{ secrets.TSOPASS }}
          runtimeConfiguration: 'TPZP'
          stream: 'PLAY'
          application: 'PLAY'
          checkoutLevel: 'DEV1'
          gitUid: ${{ secrets.GITUID }}
          gitToken: ${{ secrets.GITHUB_TOKEN }}
          winTopazPath: ${{ env.Win_Topaz_Location }}
          #containerCreation: 'per-branch'
          showEnv: true
      
      - name: Get automatic build parameters
        run: echo "automaticBuildJson=${{ steps.sync.outputs.automaticBuildJson }}"
      
      - name: generate step
        uses: bmc-compuware/ispw-generate@main
        id: generate
        if: ${{ steps.sync.outputs.automaticBuildJson != '{}'}}
        with:
          ces_url: 'http://ces-host.com:48226/'
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'my-srid'
          runtime_configuration: 'TPZP'
          generate_automatically: ${{ steps.sync.outputs.automaticBuildJson }}
      
      - name: generate output
        if: success() || failure()
        run: |
          echo "failed count: ${{ steps.generate.outputs.generate_failed_count }}"
          echo "success count: ${{ steps.generate.outputs.generate_success_count }}"
          echo "timeout? ${{ steps.generate.outputs.is_timed_out }} "
          echo "has failure? ${{ steps.generate.outputs.has_failures }}"
          echo "task count: ${{ steps.generate.outputs.task_count }}"
          echo "set id: ${{ steps.generate.outputs.set_id }}"
          echo "url: ${{ steps.generate.outputs.url }}"
          echo "assignment id: ${{ steps.generate.outputs.assignment_id }}"
          
      - name: wait 30 second for generate to complete
        run: Start-Sleep -s 30
        shell: powershell
      
      - name: deploy
        if: ${{ steps.sync.outputs.automaticBuildJson != '{}'}}
        uses: bmc-compuware/ispw-deploy@main
        id: deploy
        with:
          ces_url: 'http://ces-host.com:48226/'
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'my-srid'
          runtime_configuration: 'TPZP'
          deploy_automatically: ${{ steps.sync.outputs.automaticBuildJson }}


